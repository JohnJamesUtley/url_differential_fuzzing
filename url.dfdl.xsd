<?xml version="1.0" encoding="UTF-8"?>

<!-- 
RFC3986 - URL
Author: Ben Kallus
 -->

<xs:schema
  targetNamespace="url"
  xmlns:url="url"
  xmlns:dfdl="http://www.ogf.org/dfdl/dfdl-1.0/"
  xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <xs:include schemaLocation="org/apache/daffodil/xsd/DFDLGeneralFormat.dfdl.xsd" />

  <xs:annotation>
    <xs:appinfo source="http://www.ogf.org/dfdl/">
      <dfdl:format ref="GeneralFormat" />
    </xs:appinfo>
  </xs:annotation>

  <xs:element name="uri" type="url:uri">
  </xs:element>

  <xs:complexType name="uri">
    <xs:sequence>
      <xs:element name="scheme" type="url:scheme" />
      <xs:element name="colon" type="url:colon" />
      <xs:element name="hier_part" type="url:hier_part" />
      <xs:element name="query" type="url:query" minOccurs="0" maxOccurs="1" />
      <xs:element name="fragment" type="url:fragment" minOccurs="0" maxOccurs="1" />
    </xs:sequence>
  </xs:complexType>

  <xs:simpleType name="scheme"
                 dfdl:lengthKind="pattern"
                 dfdl:lengthPattern="[A-Za-z]([A-Za-z0-9\+\-\.])*">
    <xs:annotation>
      <xs:appinfo source="http://www.ogf.org/dfdl/">
        <dfdl:assert test="{ . ne '' }" />
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string" />
  </xs:simpleType>

  <xs:simpleType name="colon"
                 dfdl:lengthKind="pattern"
                 dfdl:lengthPattern=":">
    <xs:annotation>
      <xs:appinfo source="http://www.ogf.org/dfdl/">
        <dfdl:assert test="{ . ne '' }" />
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string" />
  </xs:simpleType>

  <xs:complexType name="hier_part">
    <xs:choice>
      <!-- <xs:element name="slash_slash_authority_path_abempty" type="url:slash_slash_authority_path_abempty" /> -->
      <xs:element name="path_absolute" type="url:path_absolute" />
      <xs:element name="path_rootless" type="url:path_rootless" />
      <xs:element name="path_empty" type="url:path_empty" />
    </xs:choice>
  </xs:complexType>

<!-- path-absolute = "/" [ segment-nz *( "/" segment ) ] -->
  <xs:simpleType name="path_absolute"
                 dfdl:lengthKind="pattern"
                 dfdl:lengthPattern="/(([A-Za-z0-9\-\._~!\$\x26\'\(\)\*\+,;=:@]|%[0-9A-F]{2})+(/([A-Za-z0-9\-\._~!\$\x26\'\(\)\*\+,;=:@]|%[0-9A-F]{2})*)*)?">
    <xs:annotation>
      <xs:appinfo source="http://www.ogf.org/dfdl/">
        <dfdl:assert test="{ . ne '' }" />
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string" />
  </xs:simpleType>

<!-- path-rootless = segment-nz *( "/" segment ) -->
<!-- segment-nz    = 1*pchar -->
<!-- segment       = *pchar -->
  <xs:simpleType name="path_rootless"
                 dfdl:lengthKind="pattern"
                 dfdl:lengthPattern="([A-Za-z0-9\-\._~!\$\x26\'\(\)\*\+,;=:@]|%[0-9A-F]{2})+(/([A-Za-z0-9\-\._~!\$\x26\'\(\)\*\+,;=:@]|%[0-9A-F]{2})*)*">
    <xs:annotation>
      <xs:appinfo source="http://www.ogf.org/dfdl/">
        <dfdl:assert test="{ . ne '' }" />
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string" />
  </xs:simpleType>

  <xs:simpleType name="path_empty"
                 dfdl:lengthKind="explicit"
                 dfdl:length="0">
    <xs:restriction base="xs:string" />
  </xs:simpleType>

<!-- query = *( pchar / "/" / "?" ) -->
  <!-- query = "(([A-Za-z0-9\-\._~!\$\x26\'\(\)\*\+,;=:@]|%[0-9A-F]{2})|/|\?)*" -->
<!-- pchar = unreserved / pct-encoded / sub-delims / ":" / "@" -->
  <!-- pchar = "[A-Za-z0-9\-\._~!\$\x26\'\(\)\*\+,;=:@]|%[0-9A-F]{2}" -->
<!-- unreserved = ALPHA / DIGIT / "-" / "." / "_" / "~" -->
  <!-- unreserved = "[A-Za-z0-9\-\._~]" -->
<!-- pct-encoded = "%" HEXDIG HEXDIG -->
  <!-- pct_encoded = "%[0-9A-F]{2}" -->
<!-- sub-delims  = "!" / "$" / "\x26" / "'" / "(" / ")" / "*" / "+" / "," / ";" / "=" -->
  <!-- sub_delims = "[!\$\x26\'\(\)\*\+,;=]" -->
  <xs:simpleType name="query"
                 dfdl:lengthKind="pattern"
                 dfdl:lengthPattern="\?(([A-Za-z0-9\-\._~!\$\x26\'\(\)\*\+,;=:@]|%[0-9A-F]{2})|/|\?)*">
    <xs:annotation>
      <xs:appinfo source="http://www.ogf.org/dfdl/">
        <dfdl:assert test="{ . ne '' }" />
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string" />
  </xs:simpleType>

<!-- fragment has exactly the same ABNF rule as query in RFC3986, except it starts with '#' -->
  <xs:simpleType name="fragment"
                 dfdl:lengthKind="pattern"
                 dfdl:lengthPattern="#(([A-Za-z0-9\-\._~!\$\x26\'\(\)\*\+,;=:@]|%[0-9A-F]{2})|/|\?)*">
    <xs:annotation>
      <xs:appinfo source="http://www.ogf.org/dfdl/">
        <dfdl:assert test="{ . ne '' }" />
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string" />
  </xs:simpleType>

</xs:schema>
